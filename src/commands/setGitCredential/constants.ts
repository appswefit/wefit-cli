import chalk from "chalk";
import { ChoiceEnum, TextChoice } from "./interface";

const FINAL_CHOICE: TextChoice[] = [ChoiceEnum.ONE, ChoiceEnum.TWO];

const TEXT_CHOICE: Record<TextChoice, string> = {
  "1": "Executar o comando",
  "2": "Enviar para a √°rea de transfer√™ncia",
};

const MIN_LENGTH_CREDENTIAL = 52;

const REGEX = {
  remote: /(.*\/\/.*)(:.*@)(.*$)/gim,
};

const TEXTS = {
  example: chalk.redBright('~ we set-git-credential "my new credential" # or'),
  exampleShort: chalk.redBright('~ we sgc "my new credential"'),
  invalid: chalk.redBright("\n‚ùå Digite a credencial ‚ö†Ô∏è"),
  invalidLength: (size = 0) =>
    chalk.redBright(
      `\n‚ùå O tamanho da credencial √© ${size}. Essa credencial √© inv√°lida.`
    ),
  invalidPath: (path = "") =>
    chalk.red(`\n‚ùå Caminho "${path}" n√£o encontrado!`),
  invalidRemoteUrl: (path = "") =>
    chalk.red(
      `\n‚ùå [FATAL]: O caminho "${path}" n√£o √© um reposit√≥rio git (ou qualquer um dos diret√≥rios pai): .git!`
    ),
  invalidExecution: chalk.redBright(
    `\n‚ùå Tivemos um problema ao executar o comando!\nùåï Favor entrar em contato com o suporte ‚òè.`
  ),
  invalidReason: chalk.redBright(
    `\nüö® Algo de errado n√£o est√° certo ‚ö†Ô∏è!\nùåï Favor entrar em contato com o suporte ‚òè.`
  ),
  welcome: chalk.yellow("\nüõ†Ô∏è Vamos l√°! üõ†Ô∏è"),
  promptPath: (dir = "") => {
    const firstLine =
      "Qual √© o caminho do reposit√≥rio que voc√™ precisa atualizar a credencial?";
    const secondLine = `Deixe vazio para utilizar "${dir}"!`;
    const thirdLine = "Digite aqui ou confirme para continuar:";
    return chalk.yellow(`${firstLine}\n${secondLine}\n${thirdLine}`);
  },
  promptResult: () => {
    const { ONE, TWO } = ChoiceEnum;
    const firstLine =
      "Voc√™ quer executar o comando ou enviar para a √°rea de transfer√™ncia?";
    const secondLine = `- Digite ${ONE} para ${TEXT_CHOICE[ONE]}`;
    const thirdLine = `- Digite ${TWO} para ${TEXT_CHOICE[TWO]}`;
    const fourthLine = "Qual ser√° sua decis√£o? ";

    return chalk.yellow(
      `${firstLine}\n${secondLine}\n${thirdLine}\n${fourthLine}`
    );
  },
  insert: (credential = "", path = "") =>
    chalk.yellow(
      `\n*** A credencial ${credential} ser√° inserida em ${path} ***`
    ),
  remoteCommand: (path = "") => {
    const cd = `cd "${path}"`;
    const gitCommand = "git remote -v | head -n 1 | awk '/origin/ {print $2}'";
    return `${cd} && ${gitCommand}`;
  },
  command: (url = "") => `git remote set-url origin ${url}`,
  clipboard: (command = "") =>
    chalk.yellow(`O comando \`${command}\` j√° est√° na √°rea de transfer√™ncia\n`),
  again: chalk.yellow("\nVamos tentar novamente...\n"),
  goodChoice: (choice: TextChoice) => {
    const firstLine = "üëç Boa escolha! VoceÃÇ escolheu";
    const secondLine = "Estamos preparando o necess√°rio para voceÃÇ.";
    return chalk.green(
      `\n${firstLine} ${TEXT_CHOICE[choice]}...\n${secondLine}`
    );
  },
  success: chalk.green("\n‚úÖ Sucesso! Sua credencial foi atualizada! ‚úÖ"),
};

export { FINAL_CHOICE, MIN_LENGTH_CREDENTIAL, TEXT_CHOICE, TEXTS, REGEX };
